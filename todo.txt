********** SOLIDITY & IPFS **********

1) update the license agreement (which to use)
	a) https://spdx.org/licenses/
2) IPFS (Pinata) & how to mint on demand?
	a) create account with Pinata or Web3 Storage (cost of pinning on either)
		IPFS: work with a remote pinning service (maybe use pinata thru the standard ipfs api?)
		https://docs.ipfs.io/how-to/work-with-pinning-services/#use-an-existing-pinning-service
		https://medium.com/pinata/who-is-responsible-for-nft-data-99fb4e8147e4
		https://proto.school/regular-files-api/05  ('wrapWithDirectory')
3) meta data (opensea & others)
	a) https://docs.opensea.io/docs/metadata-standards
	b) https://docs.opensea.io/docs/contract-level-metadata
3) add payment on minting
	a) get cost from drops data
4) add royalties
	-- rarible royalties (how to verify this will work)
	a) set royalties (do we hardcode this, update it only for new tokens going forward, or apply update to all tokens)
	b) ERC2981 (verify from a second source that I implemented this right)
	c) Opensea minting & ownable metadata
	d) https://www.gemini.com/blog/exploring-the-nft-royalty-standard-eip-2981
	e) https://medium.com/knownorigin/eip-2981-simple-and-effective-royalty-standards-for-all-dbd0b761a0f0
4) handle dates cleaner
6) SafeMath (review in crypto zombies)
8) optimize: add gas costs to truffle outputs, and try to optimize?

******************************

IPFS thread:
https://forum.openzeppelin.com/t/why-doesnt-openzeppelin-erc721-contain-settokenuri/6373/13


To run 'truffle develop':
export NODE_OPTIONS=--openssl-legacy-provider
truffle develop
https://stackoverflow.com/a/69699772/1308695



dates in solidity/web3 (javascript):   https://ethereum.stackexchange.com/a/32179

gas costs in solidity/web3 (javascript): https://ethereum.stackexchange.com/a/43004